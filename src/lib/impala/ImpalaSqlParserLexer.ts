// Generated from /Users/shuangxu/Documents/workspace/dt-sql-parser/src/grammar/impala/ImpalaSqlParser.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ImpalaSqlParserLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'statsKey=numDVs'", "'statsKey=numNulls'", "'statsKey=avgSize'", 
		"'statsKey=maxSize'", "'-- +SHUFFLE'", "'-- +NOSHUFFLE -- +CLUSTERED'", 
		"'/* +SHUFFLE */'", "'/* +NOSHUFFLE */'", "'/* +CLUSTERED */'", "'[SHUFFLE]'", 
		"'[NOSHUFFLE]'", "'->'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ImpalaSqlParserLexer._LITERAL_NAMES, ImpalaSqlParserLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ImpalaSqlParserLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ImpalaSqlParserLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "ImpalaSqlParser.g4"; }

	// @Override
	public get ruleNames(): string[] { return ImpalaSqlParserLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ImpalaSqlParserLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ImpalaSqlParserLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ImpalaSqlParserLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x0E\xD1\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x02\x02\x02\x0E\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x03\x02\x02\x02\xD0\x02\x03\x03\x02\x02\x02\x02\x05" +
		"\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03" +
		"\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03" +
		"\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03" +
		"\x02\x02\x02\x02\x19\x03\x02\x02\x02\x03\x1B\x03\x02\x02\x02\x05+\x03" +
		"\x02\x02\x02\x07=\x03\x02\x02\x02\tN\x03\x02\x02\x02\v_\x03\x02\x02\x02" +
		"\rk\x03\x02\x02\x02\x0F\x87\x03\x02\x02\x02\x11\x96\x03\x02\x02\x02\x13" +
		"\xA7\x03\x02\x02\x02\x15\xB8\x03\x02\x02\x02\x17\xC2\x03\x02\x02\x02\x19" +
		"\xCE\x03\x02\x02\x02\x1B\x1C\x07u\x02\x02\x1C\x1D\x07v\x02\x02\x1D\x1E" +
		"\x07c\x02\x02\x1E\x1F\x07v\x02\x02\x1F \x07u\x02\x02 !\x07M\x02\x02!\"" +
		"\x07g\x02\x02\"#\x07{\x02\x02#$\x07?\x02\x02$%\x07p\x02\x02%&\x07w\x02" +
		"\x02&\'\x07o\x02\x02\'(\x07F\x02\x02()\x07X\x02\x02)*\x07u\x02\x02*\x04" +
		"\x03\x02\x02\x02+,\x07u\x02\x02,-\x07v\x02\x02-.\x07c\x02\x02./\x07v\x02" +
		"\x02/0\x07u\x02\x0201\x07M\x02\x0212\x07g\x02\x0223\x07{\x02\x0234\x07" +
		"?\x02\x0245\x07p\x02\x0256\x07w\x02\x0267\x07o\x02\x0278\x07P\x02\x02" +
		"89\x07w\x02\x029:\x07n\x02\x02:;\x07n\x02\x02;<\x07u\x02\x02<\x06\x03" +
		"\x02\x02\x02=>\x07u\x02\x02>?\x07v\x02\x02?@\x07c\x02\x02@A\x07v\x02\x02" +
		"AB\x07u\x02\x02BC\x07M\x02\x02CD\x07g\x02\x02DE\x07{\x02\x02EF\x07?\x02" +
		"\x02FG\x07c\x02\x02GH\x07x\x02\x02HI\x07i\x02\x02IJ\x07U\x02\x02JK\x07" +
		"k\x02\x02KL\x07|\x02\x02LM\x07g\x02\x02M\b\x03\x02\x02\x02NO\x07u\x02" +
		"\x02OP\x07v\x02\x02PQ\x07c\x02\x02QR\x07v\x02\x02RS\x07u\x02\x02ST\x07" +
		"M\x02\x02TU\x07g\x02\x02UV\x07{\x02\x02VW\x07?\x02\x02WX\x07o\x02\x02" +
		"XY\x07c\x02\x02YZ\x07z\x02\x02Z[\x07U\x02\x02[\\\x07k\x02\x02\\]\x07|" +
		"\x02\x02]^\x07g\x02\x02^\n\x03\x02\x02\x02_`\x07/\x02\x02`a\x07/\x02\x02" +
		"ab\x07\"\x02\x02bc\x07-\x02\x02cd\x07U\x02\x02de\x07J\x02\x02ef\x07W\x02" +
		"\x02fg\x07H\x02\x02gh\x07H\x02\x02hi\x07N\x02\x02ij\x07G\x02\x02j\f\x03" +
		"\x02\x02\x02kl\x07/\x02\x02lm\x07/\x02\x02mn\x07\"\x02\x02no\x07-\x02" +
		"\x02op\x07P\x02\x02pq\x07Q\x02\x02qr\x07U\x02\x02rs\x07J\x02\x02st\x07" +
		"W\x02\x02tu\x07H\x02\x02uv\x07H\x02\x02vw\x07N\x02\x02wx\x07G\x02\x02" +
		"xy\x07\"\x02\x02yz\x07/\x02\x02z{\x07/\x02\x02{|\x07\"\x02\x02|}\x07-" +
		"\x02\x02}~\x07E\x02\x02~\x7F\x07N\x02\x02\x7F\x80\x07W\x02\x02\x80\x81" +
		"\x07U\x02\x02\x81\x82\x07V\x02\x02\x82\x83\x07G\x02\x02\x83\x84\x07T\x02" +
		"\x02\x84\x85\x07G\x02\x02\x85\x86\x07F\x02\x02\x86\x0E\x03\x02\x02\x02" +
		"\x87\x88\x071\x02\x02\x88\x89\x07,\x02\x02\x89\x8A\x07\"\x02\x02\x8A\x8B" +
		"\x07-\x02\x02\x8B\x8C\x07U\x02\x02\x8C\x8D\x07J\x02\x02\x8D\x8E\x07W\x02" +
		"\x02\x8E\x8F\x07H\x02\x02\x8F\x90\x07H\x02\x02\x90\x91\x07N\x02\x02\x91" +
		"\x92\x07G\x02\x02\x92\x93\x07\"\x02\x02\x93\x94\x07,\x02\x02\x94\x95\x07" +
		"1\x02\x02\x95\x10\x03\x02\x02\x02\x96\x97\x071\x02\x02\x97\x98\x07,\x02" +
		"\x02\x98\x99\x07\"\x02\x02\x99\x9A\x07-\x02\x02\x9A\x9B\x07P\x02\x02\x9B" +
		"\x9C\x07Q\x02\x02\x9C\x9D\x07U\x02\x02\x9D\x9E\x07J\x02\x02\x9E\x9F\x07" +
		"W\x02\x02\x9F\xA0\x07H\x02\x02\xA0\xA1\x07H\x02\x02\xA1\xA2\x07N\x02\x02" +
		"\xA2\xA3\x07G\x02\x02\xA3\xA4\x07\"\x02\x02\xA4\xA5\x07,\x02\x02\xA5\xA6" +
		"\x071\x02\x02\xA6\x12\x03\x02\x02\x02\xA7\xA8\x071\x02\x02\xA8\xA9\x07" +
		",\x02\x02\xA9\xAA\x07\"\x02\x02\xAA\xAB\x07-\x02\x02\xAB\xAC\x07E\x02" +
		"\x02\xAC\xAD\x07N\x02\x02\xAD\xAE\x07W\x02\x02\xAE\xAF\x07U\x02\x02\xAF" +
		"\xB0\x07V\x02\x02\xB0\xB1\x07G\x02\x02\xB1\xB2\x07T\x02\x02\xB2\xB3\x07" +
		"G\x02\x02\xB3\xB4\x07F\x02\x02\xB4\xB5\x07\"\x02\x02\xB5\xB6\x07,\x02" +
		"\x02\xB6\xB7\x071\x02\x02\xB7\x14\x03\x02\x02\x02\xB8\xB9\x07]\x02\x02" +
		"\xB9\xBA\x07U\x02\x02\xBA\xBB\x07J\x02\x02\xBB\xBC\x07W\x02\x02\xBC\xBD" +
		"\x07H\x02\x02\xBD\xBE\x07H\x02\x02\xBE\xBF\x07N\x02\x02\xBF\xC0\x07G\x02" +
		"\x02\xC0\xC1\x07_\x02\x02\xC1\x16\x03\x02\x02\x02\xC2\xC3\x07]\x02\x02" +
		"\xC3\xC4\x07P\x02\x02\xC4\xC5\x07Q\x02\x02\xC5\xC6\x07U\x02\x02\xC6\xC7" +
		"\x07J\x02\x02\xC7\xC8\x07W\x02\x02\xC8\xC9\x07H\x02\x02\xC9\xCA\x07H\x02" +
		"\x02\xCA\xCB\x07N\x02\x02\xCB\xCC\x07G\x02\x02\xCC\xCD\x07_\x02\x02\xCD" +
		"\x18\x03\x02\x02\x02\xCE\xCF\x07/\x02\x02\xCF\xD0\x07@\x02\x02\xD0\x1A" +
		"\x03\x02\x02\x02\x03\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ImpalaSqlParserLexer.__ATN) {
			ImpalaSqlParserLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ImpalaSqlParserLexer._serializedATN));
		}

		return ImpalaSqlParserLexer.__ATN;
	}

}

